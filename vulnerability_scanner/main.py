import logging
import requests
from scanners.sql_injection_scanner import scan_sql_injection
from scanners.xss_scanner import scan_xss
from scanners.directory_traversal_scanner import scan_directory_traversal
from scanners.lfi_scanner import scan_lfi

# Set up logging
logging.basicConfig(filename='logs/scan_results.log', level=logging.INFO)

def main():
	def repeat():
		url = input('Enter a URL e.g https://facebook.com: ')
		return url
	def get_valid_url(url):
		try:
			response = requests.get(url)
			if response.status_code == 200:
				print('URL is valid!')
		except requests.exceptions.RequestException as e:
			print(f'Error: {e}. Please enter a valid URL')
			repeat()

	url = repeat()
	get_valid_url(url)
	print('Here is the list of vulnerabilities you can scan for:\n1. SQL injection\n2. Local File Inclusion (LFI)\n3. Cross-site Scrpting (XSS)\n4. Directory traversal')
	usrop = int(input('Please choose one to proceed, e.g 1: '))


	if usrop == 1:
		print(f'Scanning {url} for SQL injection')
		scan_sql_injection(url)
		if scan_sql_injection(url):
			print(f'SQL injection found at {url}')
		else:
				print(f'No SQL Injection found at {url}')

	elif usrop == 2:
		print(f'Scanning {url} for LFI')
		scan_lfi(url)
		if scan_lfi(url):
			print(f'LFI found at {url}')
		else:
			print(f'No LFI found at {url}')

	elif usrop == 3:
		print(f'Scanning {url} for XSS')
		scan_xss(url)
		if scan_xss(url):
			print(f'XSS found at {url}')
		else:
			print(f'XSS Injection found at {url}')

	elif usrop == 4:
		print(f'Scanning {url} for Directory traversal')
		scan_directory_traversal(url)
		if scan_directory_traversal(url):
			print(f'Directory traversal found at {url}')
		else:
			print(f'No Directory traversal found at {url}')

	elif usrop == 0:
		print('Invalid Option!')

if __name__ == "__main__":
    main()
